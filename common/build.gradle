import org.apache.tools.ant.filters.ReplaceTokens

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'https://repo.minebench.de/' }
}

dependencies {
    api project(':api')
    compileOnly project(':common:loader-utils')

    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'com.mojang:brigadier:1.0.18'
    compileOnly 'org.checkerframework:checker-qual:3.21.2'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.14.0'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.14.0'
    compileOnly 'org.projectlombok:lombok:1.18.36'

    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    api('net.dirtcraft:storageutils:1.3-SNAPSHOT') {
        changing true
    }

    api('net.kyori:adventure-api:4.16.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'checker-qual')
        exclude(module: 'annotations')
    }

    api('net.kyori:adventure-text-serializer-gson:4.16.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'adventure-api')
        exclude(module: 'gson')
    }

    api('net.kyori:adventure-text-minimessage:4.16.0') {
        exclude(module: 'adventure-api')
    }

    api('net.kyori:adventure-text-serializer-legacy:4.16.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'adventure-api')
    }

    api('net.kyori:adventure-text-serializer-plain:4.16.0') {
        exclude(module: 'adventure-bom')
        exclude(module: 'adventure-api')
    }

    api('net.kyori:event-api:3.0.0') {
        exclude(module: 'checker-qual')
        exclude(module: 'guava')
    }

    api 'net.dv8tion:JDA:5.0.0-beta.18'
    api 'com.github.ben-manes.caffeine:caffeine:2.9.0'
    api 'net.bytebuddy:byte-buddy:1.14.13'
    api 'com.typesafe:config:1.4.0'
    api 'commons-io:commons-io:2.11.0'

    api 'org.hibernate:hibernate-core:5.2.1.Final'
    api 'javax.persistence:javax.persistence-api:2.2'
    api 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'

    api('org.spongepowered:configurate-core:3.7.2') {
        transitive = false
    }

    api('org.spongepowered:configurate-hocon:3.7.2') {
        transitive = false
    }

    api 'com.google.code.gson:gson:2.10'
    api 'com.google.guava:guava:19.0'

    compileOnly 'com.zaxxer:HikariCP:4.0.3'
}

tasks.register('processSource', Sync) {
    outputs.upToDateWhen { false }
    from sourceSets.main.java

    filter(ReplaceTokens,
            tokens: [
                    mod_id  : project.ext.modId,
                    mod_name: project.ext.modName,
                    version : project.ext.fullVersion
            ]
    )

    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
}
