import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = 1.8
targetCompatibility = 17

minecraft {
    mappings channel: mapping_channel, version: mapping_version
}

mixin {
    config 'dirtcore.mixins.json'
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.3:processor'

    implementation 'net.dirtcraft:api'
    implementation 'net.dirtcraft:common-loader-utils'
}

build {
    dependsOn(":forge_1_20_1:build")
}

tasks.register('processSource', Sync) {
    outputs.upToDateWhen { false }
    from sourceSets.main.java

    filter(ReplaceTokens,
            tokens: [
                    mod_id           : project.ext.modId,
                    mod_name         : project.ext.modName,
                    version          : project.ext.fullVersion,
                    minecraft_version: project.ext.minecraftVersion
            ]
    )

    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
}

processResources {
    outputs.upToDateWhen { false }
    // include platform specific files into processing
    from "${project.ext.dirtcoreDir}/common/loader-utils/src/main/resources"

    filesMatching(['**/mods.toml', '**/pack.mcmeta']) {
        expand 'mod_id': project.ext.modId,
                'mod_name': project.ext.modName,
                'mod_authors': project.ext.modAuthors,
                'mod_description': project.ext.modDescription,
                'version': project.ext.fullVersion,
                'minecraft_version': project.ext.minecraftVersion,
                'loader_version_range': project.ext.loaderVersionRange
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title"     : project.ext.modId,
                "Specification-Vendor"    : project.ext.modAuthors,
                "Specification-Version"   : project.ext.majorVersion,
                "Implementation-Title"    : project.ext.modName,
                "Implementation-Version"  : project.ext.fullVersion,
                "Implementation-Vendor"   : project.ext.modAuthors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

reobf {
    shadowJar {}
}

shadowJar {
    archiveFileName = "DirtCore-Forge-${project.ext.minecraftVersion}-${project.ext.fullVersion}.jar"

    from {
        project(':forge_1_20_1').tasks.shadowJar.archiveFile
    }

    dependencies {
        include(dependency('net.dirtcraft:.*'))
    }

    exclude '**/META-INF/neoforge.mods.toml'
    exclude '**/mcmod.info'
    exclude '**/plugin.yml'
}

artifacts {
    archives shadowJar
}
